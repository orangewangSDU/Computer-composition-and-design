/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("C_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("output")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("output[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("output[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "output";
}

SIGNAL("pin_name1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Open")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("altera_reserved_tdo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("C_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("CLR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("output[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 56.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 44.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 56.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 24.0;
		}
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 54.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 156.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 22.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 56.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 36.0;
			LEVEL 0 FOR 44.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 21.5;
	}
}

TRANSITION_LIST("output[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.5;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 76.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 56.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 124.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 74.5;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 164.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 104.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("output[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 42.5;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 48.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 116.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.5;
	}
}

TRANSITION_LIST("pin_name1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.5;
		NODE
		{
			REPEAT = 979;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
	}
}

TRANSITION_LIST("S_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 980.0;
	}
}

TRANSITION_LIST("Open")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}

TRANSITION_LIST("altera_reserved_tdo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Open";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "output[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "output[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "pin_name1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "altera_reserved_tdo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
